#ngx_feature=
#ngx_feature_name=
#ngx_feature_run=no
#ngx_feature_incs=
#ngx_feature_path=
#ngx_feature_libs=
#ngx_feature_test=
#. auto/feature

#if [ $ngx_found = yes ]; then
    ngx_addon_name=ngx_captcha_access_filter_module
if test -n "$ngx_module_link"; then
    ngx_module_type=HTTP
    ngx_module_name=$ngx_addon_name
    ngx_module_incs=
    ngx_module_deps="$ngx_addon_dir/src/ngx_captcha_access_filter_module.h $ngx_addon_dir/src/ngx_http_libcaptcha.h $ngx_addon_dir/src/ngx_captcha_utils.h"
    ngx_module_srcs="$ngx_addon_dir/src/ngx_captcha_access_filter_module.c $ngx_addon_dir/src/ngx_http_libcaptcha.c $ngx_addon_dir/src/ngx_captcha_utils.c"
    ngx_module_libs=

    . auto/module
else
	HTTP_MODULES="$HTTP_MODULES ngx_captcha_access_filter_module"
	NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/src/ngx_captcha_access_filter_module.c $ngx_addon_dir/src/ngx_http_libcaptcha.c $ngx_addon_dir/src/ngx_captcha_utils.c"
	NGX_ADDON_DEPS="$NGX_ADDON_DEPS $ngx_addon_dir/src/ngx_captcha_access_filter_module.h $ngx_addon_dir/src/ngx_http_libcaptcha.h $ngx_addon_dir/src/ngx_captcha_utils.h"
	CORE_INCS="$CORE_INCS -DBIG_JOINS=1 -fno-strict-aliasing -DUNIV_LINUX"
	CORE_LIBS="$CORE_LIBS -Wl -rdynamic -lcurl -lmemcached"
fi
#else
#    cat << END
#$0: error: unable to configure the ngx_captcha_access_filter_module.
#END
#    exit 1
#fi
